name: Local CI
on:
  - push

jobs:
  ci:
    name: Continuous Integration
    runs-on: ubuntu-20.04
    env:
      IMAGE_NAME: ${{ github.repository }}
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Check code formatting with black
        uses: psf/black@stable
        with:
          options: "--check --verbose"

      - name: Setup docker buildx
        uses: docker/setup-buildx-action@v1.6.0

      - name: Get current git commit hash
        uses: priyesh2609/sha-trim-action@v1.1.1

      - name: Get current git branch name
        uses: EthanSK/git-branch-name-action@v1

      - name: Build docker image
        working-directory: ./docker
        shell: bash
        env:
          DEFAULT_BRANCH: main
        run: |
          docker pull $IMAGE_NAME:$DEFAULT_BRANCH || true
          docker pull $IMAGE_NAME:$GIT_BRANCH_NAME || true
          docker image build \
            --tag "$IMAGE_NAME:$GIT_BRANCH_NAME" \
            --tag "$IMAGE_NAME:$TRIMMED_SHA" \
            --label git-commit=$TRIMMED_SHA \
            --label git-branch=$GIT_BRANCH_NAME \
            --build-arg "BUILDKIT_INLINE_CACHE=1" \
            --build-arg "GIT_COMMIT=$TRIMMED_SHA" \
            --cache-from=$IMAGE_NAME:$DEFAULT_BRANCH \
            --cache-from=$IMAGE_NAME:$GIT_BRANCH_NAME \
            ..

      - name: stand up ckan stack
        working-directory: docker
        run: |
          python3 compose.py --compose-file=docker-compose.dev.yml --compose-file=docker-compose.ci.yml up
          docker exec -t emc-dcpr_ckan-web_1 poetry install
          docker exec -t emc-dcpr_ckan-web_1 poetry run ckan db init
          docker exec -t emc-dcpr_ckan-web_1 poetry run ckan harvester initdb

      - name: wait for test db
        uses: iFaxity/wait-on-action
        with:
          resource: tcp:localhost:55432

      - name: run unit tests
        working-directory: docker
        run: |
          docker exec -t emc-dcpr_ckan-web_1 poetry run pytest \
              --ckan-ini docker/ckan-ci-settings.ini \
              -m unit \
              --cov

      - name: run integration tests
        working-directory: docker
        run: |
          docker exec -t emc-dcpr_ckan-web_1 poetry run pytest \
              --ckan-ini docker/ckan-ci-settings.ini \
              -m integration \
              --cov

      - name: wind down ckan stack
        working-directory: docker
        run: |
          python3 compose.py --compose-file=docker-compose.dev.yml --compose-file=docker-compose.ci.yml down

      - name: Login to dockerhub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: publish image to dockerhub
        run: |
          docker push $IMAGE_NAME:$GIT_BRANCH_NAME
          docker push $IMAGE_NAME:$TRIMMED_SHA
