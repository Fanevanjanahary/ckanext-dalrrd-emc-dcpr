on:
  - push
  - pull_request

jobs:
  ci:
    name: Continuous Integration
    runs-on: ubuntu-20.04
    env:
      IMAGE_NAME: ${{ env.GITHUB_REPOSITORY }}
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"

      - name: Check code formatting with black
        uses: psf/black@stable
        with:
          options: "--check --verbose"

      - name: Setup docker buildx
        uses: docker/setup-buildx-action@v1.6.0

      - name: Get current git commit hash
        uses: drdeath2069/sha-trim-action@v1.1.1

      - name: Get current git branch name
        uses: EthanSK/git-branch-name-action@v1

      - name: Build docker image
        working-directory: ./docker
        shell: bash
        env:
          DEFAULT_BRANCH: main
        run: |
          docker pull $IMAGE_NAME:$DEFAULT_BRANCH || true
          docker pull $IMAGE_NAME:$GIT_BRANCH_NAME || true
          docker image build \
            --tag "$IMAGE_NAME:$GIT_BRANCH_NAME" \
            --tag "$IMAGE_NAME:$TRIMMED_SHA" \
            --label git-commit=$TRIMMED_SHA \
            --label git-branch=$GIT_BRANCH_NAME \
            --build-arg "BUILDKIT_INLINE_CACHE=1" \
            --build-arg "GIT_COMMIT=$TRIMMED_SHA" \
            --cache-from=$IMAGE_NAME:$DEFAULT_BRANCH \
            --cache-from=$IMAGE_NAME:$GIT_BRANCH_NAME \
            ..

#      - name: run unit tests
#        uses: addnab/docker-run-action@v3
#        with:
#          image: ${{ env.IMAGE_NAME }}:${{ env.TRIMMED_SHA }}
#          run: |
#            poetry install
#            pytest
#
#      - name: run integration tests (with docker-compose)
#      - name: publish image to container registry
